#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç VK API
"""
import os
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('–¢–û–ö–ï–ù–´.env')

def test_messages():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    vk_token = os.getenv('VK_TOKEN')
    group_id = os.getenv('VK_GROUP_ID')
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π...")
    print(f"üìã –¢–æ–∫–µ–Ω: {vk_token[:20]}...")
    print(f"üè¢ ID –≥—Ä—É–ø–ø—ã: {group_id}")
    
    if not vk_token or not group_id:
        print("‚ùå –¢–æ–∫–µ–Ω –∏–ª–∏ ID –≥—Ä—É–ø–ø—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return False
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK API
        vk_session = vk_api.VkApi(token=vk_token)
        vk = vk_session.get_api()
        longpoll = VkLongPoll(vk_session)
        
        print("‚úÖ VK API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print("üîç –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π... (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)")
        
        # –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        for event in longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW:
                print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
                print(f"   –û—Ç: {event.user_id}")
                print(f"   –í —á–∞—Ç: {event.peer_id}")
                print(f"   –¢–µ–∫—Å—Ç: {event.text}")
                print(f"   –í—Ä–µ–º—è: {event.datetime}")
                print("---")
                
                # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if event.text.lower() in ['—Ç–µ—Å—Ç', 'test']:
                    vk.messages.send(
                        peer_id=event.peer_id,
                        message="‚úÖ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!",
                        random_id=vk_api.utils.get_random_id()
                    )
                    print("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        
    except KeyboardInterrupt:
        print("\nüõë –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    test_messages()
