"""
–ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è VK –ë–æ—Ç–∞
"""
import os
import threading
import logging
from datetime import datetime
from typing import Dict, Any

logger = logging.getLogger(__name__)

class ConsoleAdmin:
    """–ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º"""
    
    def __init__(self):
        self.bot = None
        self.stats = {
            'start_time': datetime.now(),
            'messages_processed': 0,
            'commands_executed': 0,
            'errors_count': 0
        }
        logger.info("üéõÔ∏è –ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    def update_stats(self, stat_name: str, increment: int = 1):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        if stat_name in self.stats:
            self.stats[stat_name] += increment
    
    def get_stats(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        uptime = datetime.now() - self.stats['start_time']
        return {
            **self.stats,
            'uptime': str(uptime).split('.')[0],  # –£–±–∏—Ä–∞–µ–º –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—ã
            'status': 'running' if self.bot else 'stopped'
        }
    
    def print_status(self):
        """–í—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤ –∫–æ–Ω—Å–æ–ª—å"""
        stats = self.get_stats()
        print("\n" + "="*50)
        print("ü§ñ –°–¢–ê–¢–£–° VK –ë–û–¢–ê")
        print("="*50)
        print(f"‚è±Ô∏è  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {stats['uptime']}")
        print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['messages_processed']}")
        print(f"‚ö° –ö–æ–º–∞–Ω–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {stats['commands_executed']}")
        print(f"‚ùå –û—à–∏–±–æ–∫: {stats['errors_count']}")
        print(f"üîÑ –°—Ç–∞—Ç—É—Å: {stats['status']}")
        print("="*50)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Å–æ–ª—å–Ω–æ–π –ø–∞–Ω–µ–ª–∏
console_admin = ConsoleAdmin()